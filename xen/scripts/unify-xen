#!/bin/bash
# Build a "unified Xen" image.
# Usage
# unify xen.efi xen.cfg bzimage initrd [xsm [ucode]]
#
# Merge a Xen configuration, Linux kernel, initrd, and optional XSM or ucode
# into xen.efi to produce a single signed EFI executable.
#
# For shellcheck
# - turn off "expressions don't expand in single quotes"
# - and "can't follow non-constant sources"
# shellcheck disable=SC2016 disable=SC1090
set -e -o pipefail
export LC_ALL=C

die() { echo "$@" >&2 ; exit 1 ; }
warn() { echo "$@" >&2 ; }
debug() { [ "$V" == 1 ] && echo "$@" >&2 ; }

cleanup() {
	rm -rf "$TMP"
}

TMP=$(mktemp -d)
trap cleanup EXIT

########################################

XEN="$1"
CONFIG="$2"
KERNEL="$3"
RAMDISK="$4"
XSM="$5"
UCODE="$6"

if [ ! -r "$XEN" ]; then
	die "$XEN: Unable to find Xen executable"
fi

BASE_ADDR="$(objdump -h "$XEN" | awk '/ \.text / { print $4 }')"
PREFIX_ADDR="0x$(echo "$BASE_ADDR" | cut -c1-9)"
warn "$XEN: Base address $BASE_ADDR"

objcopy \
	${CONFIG:+\
		--add-section .config="$CONFIG" \
		--change-section-vma .config=${PREFIX_ADDR}1000000 \
	} \
	${UCODE:+\
		--add-section .ucode="$UCODE" \
		--change-section-vma  .ucode=${PREFIX_ADDR}1010000 \
	} \
	${XSM:+\
		--add-section .xsm="$XSM" \
		--change-section-vma  .xsm=${PREFIX_ADDR}1080000 \
	} \
	${KERNEL:+\
		--add-section .kernel="$KERNEL" \
		--change-section-vma  .kernel=${PREFIX_ADDR}1100000 \
	} \
	${RAMDISK:+\
		--add-section .ramdisk="$RAMDISK" \
		--change-section-vma .ramdisk=${PREFIX_ADDR}2000000 \
	} \
	"$XEN" \
	"$TMP/xen.efi" \
|| die "$TMP/xen.efi: unable to create"

KEY_ENGINE=""
KEY="/etc/safeboot/signing.key"
CERT="/etc/safeboot/cert.pem"

for try in 1 2 3 ; do
	warn "$TMP/xen.efi: Signing (ignore warnings about gaps)"
	sbsign.safeboot \
		$KEY_ENGINE \
		--key "$KEY" \
		--cert "$CERT" \
		--output "xen.signed.efi" \
		"$TMP/xen.efi" \
	&& break

	if [ "$try" == 3 ]; then
		die "xen.signed.efi: failed after $try tries"
	fi

	warn "signature failed! Try $try."
done

